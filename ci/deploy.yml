steps:
  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables.tagged, True))) }}:
    - script: |
        set -euo pipefail

        version="$(grep -Po '<Version>\K.+(?=<)' src/${PROJECT}/${PROJECT}.csproj)-build.${BUILD_BUILDID}"

        printf '%s\n' "Version read from project file: ${version}"
        printf '%s\n' "##vso[task.setvariable variable=VERSION]${version}"
      displayName: 'Read version'
      condition: and(succeeded(), eq(variables.tagged, False))

    - task: DotNetCoreCLI@2
      displayName: 'Pack projects'
      inputs:
        command: pack
        # searchPatternPack: 'src/*/*.csproj'
        searchPatternPack: src/$(project)/$(project).csproj
        configuration: $(configuration)
        outputDir: $(Build.ArtifactStagingDirectory)
        includesymbols: true
        nobuild: true
        ${{ if eq(variables.tagged, False) }}:
          versioningScheme: byEnvVar
          versionEnvVar: VERSION

    - task: DotNetCoreCLI@2
      displayName: 'Push packages'
      inputs:
        command: custom
        custom: nuget
        arguments: >
          push $(Build.ArtifactStagingDirectory)/*.nupkg
          -s $(NuGet.SourceUrl)
          -k $(NuGet.ApiKey)
